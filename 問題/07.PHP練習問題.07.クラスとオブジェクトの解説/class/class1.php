<?php

// オブジェクトって何？！
// オブジェクトは「モノ」です。
// プログラミングでいうと、
// 変数、定数、関数、クラス、インスタンス、
// データベース、テーブル、レコード、カラム
// すべてのものが「オブジェクト」です。

// それらの「オブジェクト」が、
// どのような関係なのか
// どのような関連性があるのか
// を考えるのが「オブジェクト指向」と呼ばれるものです。

// プログラム言語では、
// 関係性の高いものを集めてひとまとめにしたモノの設計図
// のことを「クラス」といいます。

// クラスは下記のように定義します。
// クラス名は、パスカルケース（先頭大文字で単語の区切りを大文字）にするのが一般的です。
// クラス、プロパティ、定数、メソッドなど、
// クラスのメンバにはPHPDocを使って使い方の説明を書きましょう！

/**
 * サンプルクラス1
 */
class SampleClass1
{
    // クラスの中には、メンバを作成することができます。

    // クラス定数は、constというキーワードを使って定義します。
    // 定数名は、大文字のスネークケース（単語の区切りに_を使う）のが一般的です。

    /** @var string サンプルの定数 */
    public const SAMPLE_CONSTANT = 'サンプルの定数';

    // クラス変数（プロパティといいます）
    // 変数名は、小文字のスネークケース（単語の区切りに_を使う）のが、最近の流行りです。

    /** @var string サンプルの変数 */
    public $sample_var = 'サンプルの変数';

    // クラスメソッド
    // メソッド名は、キャメルケース（先頭小文字で単語の区切りを大文字）にするのが一般的です。

    /**
     * サンプルのメソッド
     *
     * @return string サンプルの変数
     */
    public function sampleFunction()
    {
        // クラスの中でメンバにアクセスするときは、
        // $thisという変数（疑似変数）とアロー演算子（->）を使います。
        return $this->sample_var;
    }
}

// クラスを使うときは、newというキーワードを使って、クラスのインスタンス（実体）を作ります。
$obj = new SampleClass1();

// インスタンス化されたクラスのメンバにアクセスするときは、「->」（アロー演算子）を使います。
// JavaやJavaScriptなど、他の言語では「.」を使いますね。
echo $obj->sampleFunction();

echo '<br>';

// publicなプロパティは値を書き換えることができます。
$obj->sample_var = '今日はラーメンが食べたい';
echo $obj->sampleFunction();

echo '<br>';

// 定数は、「クラス名::定数名」でアクセスできます。
echo SampleClass1::SAMPLE_CONSTANT;

// publicであっても、定数は書き換えることができません。
// SampleClass1::SAMPLE_CONSTANT = '書き換えできません';

echo '<br>';

// 別のインスタンスのプロパティの値は、別の値になります。
$obj1 = new SampleClass1();
$obj2 = new SampleClass1();

$obj1->sample_var = 'あいうえお';
$obj2->sample_var = 'かきくけこ';

echo $obj1->sampleFunction();
echo '<br>';
echo $obj2->sampleFunction();
